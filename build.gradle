buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath('org.jfrog.buildinfo:build-info-extractor-gradle:4.9.5')
        classpath('org.springframework.boot:spring-boot-gradle-plugin:1.5.1.RELEASE')
        classpath('pl.allegro.tech.build:axion-release-plugin:1.8.1')
    }
}

plugins {
    id "org.sonarqube" version "2.6.2"
    id "org.owasp.dependencycheck" version "4.0.2"
}

apply plugin: 'pl.allegro.tech.build.axion-release'
apply plugin: 'com.jfrog.artifactory'
apply plugin: 'maven-publish'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

jar {
    baseName = 'yti-spring-migration'
}

scmVersion {
    tag {
        prefix = "v"
        versionSeparator = ""
    }
}

project.version = scmVersion.version

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
}

repositories {
    jcenter()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

ext {
    springVersion = '4.2.3.RELEASE'
}

bootRepackage {
    enabled = false
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId 'fi.vm.yti'
            artifactId 'yti-spring-migration'
            version project.version

            pom.withXml {
                asNode().appendNode('description', 'Migration framework')
            }
            artifact jar
            artifact sourceJar {
                classifier "sources"
            }
        }
    }
}

artifactory {
    publish {
        defaults {
            publications('maven')
            publishArtifacts = true
            publishPom = true
        }
    }
}

dependencies {
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.slf4j:slf4j-api:1.7.22"
    compile "com.google.code.findbugs:jsr305:3.0.2"
    compile "org.jetbrains:annotations:15.0"
}

sonarqube {
    properties {
        property "sonar.projectKey", "yti-spring-migration"
        property "sonar.projectName", "yti-spring-migration"
        property("sonar.dependencyCheck.reportPath", "$buildDir/reports/dependency-check-report.xml")
        property("sonar.dependencyCheck.htmlReportPath", "$buildDir/reports/dependency-check-report.html")
    }
}

dependencyCheck {
    format = 'ALL'
    autoUpdate = false
    analyzers {
        centralEnabled = false
    }
    data {
        directory = System.getenv('OWASP_DATA_DIR')
    }
}
